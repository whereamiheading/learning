mysql> Create Table tblEmployee
    -> (
    ->   EmployeeId int Primary key,
    ->   Name nvarchar(20),
    ->   ManagerId int
    -> );
ERROR 1046 (3D000): No database selected
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database learning;
Query OK, 1 row affected (0.08 sec)

mysql> use learning;
Database changed
mysql> Create Table tblEmployee
    -> (
    ->   EmployeeId int Primary key,
    ->   Name nvarchar(20),
    ->   ManagerId int
    -> );
Query OK, 0 rows affected, 1 warning (0.11 sec)

mysql> Insert into tblEmployee values (1, 'Tom', 2);
Query OK, 1 row affected (0.01 sec)

mysql> Insert into tblEmployee values (2, 'Josh', null);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (3, 'Mike', 2);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (4, 'John', 3);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (5, 'Pam', 1);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (6, 'Mary', 3);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (7, 'James', 1);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (8, 'Sam', 5);
Query OK, 1 row affected (0.00 sec)

mysql> Insert into tblEmployee values (9, 'Simon', 1);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> with empCTE  as
    -> (
    -> select employeeid, name, managerid, 1
    -> from tblEmployee
    -> where managerid is null
    ->
    -> union all
    ->
    -> select emp.employeeid, emp.name, emp.managerid , cte.[level]+1
    -> from tblEmployee emp
    -> left join  empCTE cte
    -> on tblEmployee.managerid = empCTE.EmployeeId
    -> )
    -> select emp.name , mgr.name , emp.[level]
    -> from empCTE as emp
    -> left join empCTE as mgr
    -> on emp.managerid = mgr.employeeid ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[level]+1
from tblEmployee emp
left join  empCTE cte
on tblEmployee.managerid = ' at line 9
mysql>
mysql>
mysql>
mysql>
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
    -> Select EmpCTE.Name as Employee, Isnull(MgrCTE.Name, 'Super Boss') as Manager,
    -> EmpCTE.Lev
    -> from EmployeesCTE EmpCTE
    -> left join EmployeesCTE MgrCTE
    -> on EmpCTE.ManagerId = MgrCTE.EmployeeId;
ERROR 1582 (42000): Incorrect parameter count in the call to native function 'Isnull'
mysql>
mysql>
mysql>
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId isnull
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
    -> Select EmpCTE.Name as Employee, Isnull(MgrCTE.Name, 'Super Boss') as Manager,
    -> EmpCTE.Lev
    -> from EmployeesCTE EmpCTE
    -> left join EmployeesCTE MgrCTE
    -> on EmpCTE.ManagerId = MgrCTE.EmployeeId;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnull

    union all

    Select tblEmployee.EmployeeId, tblEmployee.Na' at line 7
mysql>
mysql>
mysql>
mysql>     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId isnull;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnull' at line 3
mysql>     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    -> ;
+------------+------+-----------+---+
| EmployeeId | Name | ManagerId | 1 |
+------------+------+-----------+---+
|          2 | Josh |      NULL | 1 |
+------------+------+-----------+---+
1 row in set (0.00 sec)

mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 7
mysql>
mysql>     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union all

    Select tblEmployee.EmployeeId, tblEmployee.Name,
    tblEmpl' at line 1
mysql>   )
    ->
    ->
    ->
    -> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   );
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 16
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   ) select * from EmployeesCTE ;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql> show tables ;
+--------------------+
| Tables_in_learning |
+--------------------+
| tblEmployee        |
+--------------------+
1 row in set (0.01 sec)

mysql> clear
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->     ) select * from EmployeesCTE
    -> ;
+------------+------+-----------+---+
| EmployeeId | Name | ManagerId | 1 |
+------------+------+-----------+---+
|          2 | Josh |      NULL | 1 |
+------------+------+-----------+---+
1 row in set (0.00 sec)

mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tbl.EmployeeId, tbl.Name,
    ->     tbl.ManagerId, cte.Lev + 1
    ->     from tblEmployee tbl
    ->     join EmployeesCTE cte
    ->     on tbl.ManagerID = cte.EmployeeId
    ->   )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql>
mysql>
mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tbl.EmployeeId, tbl.Name,
    ->     tbl.ManagerId, cte.Lev + 1
    ->     from tblEmployee tbl
    ->     join learning.EmployeesCTE cte
    ->     on tbl.ManagerID = cte.EmployeeId
    ->   )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    -> Select tbl.EmployeeId, tbl.Name,
    ->     tbl.ManagerId, cte.Lev + 1
    ->     from tblEmployee tbl
    ->     join learning.EmployeesCTE cte
    ->     on tbl.ManagerID = cte.EmployeeId
    ->   )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> With
    ->   EmployeesCTE
    ->   as
    ->   (
    ->
    ->       Select tbl.EmployeeId, tbl.Name,
    ->       tbl.ManagerId, cte.Lev + 1
    ->       from tblEmployee tbl
    ->       join EmployeesCTE cte
    ->       on tbl.ManagerID = cte.EmployeeId
    ->     )select name from EmployeesCTE;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> With
    ->  recursive EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
    -> Select EmpCTE.Name as Employee, Isnull(MgrCTE.Name, 'Super Boss') as Manager,
    -> EmpCTE.Lev
    -> from EmployeesCTE EmpCTE
    -> left join EmployeesCTE MgrCTE
    -> on EmpCTE.ManagerId = MgrCTE.EmployeeId;
ERROR 1582 (42000): Incorrect parameter count in the call to native function 'Isnull'
mysql>
mysql>
mysql>
mysql>
mysql> With
    ->  recursive EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
    -> Select EmpCTE.Name as Employee, coalesce(MgrCTE.Name, 'Super Boss') as Manager,
    -> EmpCTE.Lev
    -> from EmployeesCTE EmpCTE
    -> left join EmployeesCTE MgrCTE
    -> on EmpCTE.ManagerId = MgrCTE.EmployeeId;
+----------+------------+------+
| Employee | Manager    | Lev  |
+----------+------------+------+
| Josh     | Super Boss |    1 |
| Tom      | Josh       |    2 |
| Mike     | Josh       |    2 |
| John     | Mike       |    3 |
| Pam      | Tom        |    3 |
| Mary     | Mike       |    3 |
| James    | Tom        |    3 |
| Simon    | Tom        |    3 |
| Sam      | Pam        |    4 |
+----------+------------+------+
9 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql> With
    ->   EmployeesCTE (EmployeeId, Name, ManagerId, Lev)
    ->   as
    ->   (
    ->     Select EmployeeId, Name, ManagerId, 1
    ->     from tblEmployee
    ->     where ManagerId is null
    ->
    ->     union all
    ->
    ->     Select tblEmployee.EmployeeId, tblEmployee.Name,
    ->     tblEmployee.ManagerId, EmployeesCTE.Lev + 1
    ->     from tblEmployee
    ->     join EmployeesCTE
    ->     on tblEmployee.ManagerID = EmployeesCTE.EmployeeId
    ->   )
    -> Select EmpCTE.Name as Employee, coalesce(MgrCTE.Name, 'Super Boss') as Manager,
    -> EmpCTE.Lev
    -> from EmployeesCTE EmpCTE
    -> left join EmployeesCTE MgrCTE
    -> on EmpCTE.ManagerId = MgrCTE.EmployeeId
    -> ;
ERROR 1146 (42S02): Table 'learning.employeescte' doesn't exist
mysql>
  [Restored Jul 1, 2018 at 11:05:06 AM]
Last login: Sun Jul  1 11:05:06 on ttys000
Restored session: Sun Jul  1 03:21:04 PDT 2018
-bash: alias: jn: not found
-bash: alias: =jupyter notebook: not found
Felix-Felicis:~ aposri$
  [Restored Jul 2, 2018 at 5:30:42 PM]
Last login: Mon Jul  2 17:30:38 on console
Restored session: Mon Jul  2 03:08:52 PDT 2018
-bash: alias: jn: not found
-bash: alias: =jupyter notebook: not found
Felix-Felicis:~ aposri$ mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 8.0.11 MySQL Community Server - GPL

Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| learning           |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.01 sec)

mysql> use learning;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> create table fct_request (
    ->
    ->   dateid date not null,
    ->
    ->   sender_uid int,
    ->
    ->   recipient_uid int
    ->
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql>
mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 12345, 6789);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 12345, 9876);
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-02', '%Y-%m-%d'), 34567, 12345);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-03', '%Y-%m-%d'), 9876, 1209);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> create table fct_accept (
    ->
    ->   dateid date not null,
    ->
    ->   accepter_uid int,
    ->
    ->   sender_uid int
    ->
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql>
mysql> insert into fct_accept
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 6789, 12345);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_accept
    ->
    -> values(STR_TO_DATE('2015-01-02', '%Y-%m-%d'), 9876, 12345);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_accept
    ->
    -> values(STR_TO_DATE('2015-01-02', '%Y-%m-%d'), 12345, 34567);
Query OK, 1 row affected (0.07 sec)

mysql>
mysql>
mysql> select b.* from
    -> (
    -> select sender_uid, recipient_uid
    -> from fct_request;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 4
mysql> ) a
    -> inner join
    -> (
    -> select accepter_uid , sender_uid from fct_accept
    -> ) b
    -> where a.recipient_uid = b.accepter_uid
    -> ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') a
inner join
(
select accepter_uid , sender_uid from fct_accept
) b
where a.r' at line 1
mysql>
mysql>
mysql>
mysql>
mysql> select b.* from
    -> (
    -> select sender_uid, recipient_uid
    -> from fct_request;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 4
mysql> ) a
    -> inner join
    -> (
    -> select accepter_uid , sender_uid from fct_accept
    -> ) b
    -> on  a.recipient_uid = b.accepter_uid;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') a
inner join
(
select accepter_uid , sender_uid from fct_accept
) b
on  a.rec' at line 1
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> select b.* from
    -> (select sender_uid, recipient_uid from fct_request) a
    -> inner join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+--------------+------------+
| accepter_uid | sender_uid |
+--------------+------------+
|         6789 |      12345 |
|         9876 |      12345 |
|        12345 |      34567 |
+--------------+------------+
3 rows in set (0.00 sec)

mysql>
mysql>
mysql> select count(b.*)/count(a.*)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> inner join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '*)/count(a.*)
from (select sender_uid, recipient_uid from fct_request) a
inner ' at line 1
mysql>
mysql>
mysql>
mysql> select count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> inner join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+-------------------------------------------+
| count(b.accepter_uid)/count(a.sender_uid) |
+-------------------------------------------+
|                                    1.0000 |
+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql> select count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> left outer join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+-------------------------------------------+
| count(b.accepter_uid)/count(a.sender_uid) |
+-------------------------------------------+
|                                    0.7500 |
+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> select count(a.sender_uid) ,count(b.accepter_uid), count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> left outer join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+---------------------+-----------------------+-------------------------------------------+
| count(a.sender_uid) | count(b.accepter_uid) | count(b.accepter_uid)/count(a.sender_uid) |
+---------------------+-----------------------+-------------------------------------------+
|                   4 |                     3 |                                    0.7500 |
+---------------------+-----------------------+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 23746,2398473);
Query OK, 1 row affected (0.04 sec)

mysql> select count(a.sender_uid) ,count(b.accepter_uid), count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> left outer join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+---------------------+-----------------------+-------------------------------------------+
| count(a.sender_uid) | count(b.accepter_uid) | count(b.accepter_uid)/count(a.sender_uid) |
+---------------------+-----------------------+-------------------------------------------+
|                   5 |                     3 |                                    0.6000 |
+---------------------+-----------------------+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql> insert into fct_request
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 37465,23094);
Query OK, 1 row affected (0.10 sec)

mysql> select count(a.sender_uid) ,count(b.accepter_uid), count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> left outer join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+---------------------+-----------------------+-------------------------------------------+
| count(a.sender_uid) | count(b.accepter_uid) | count(b.accepter_uid)/count(a.sender_uid) |
+---------------------+-----------------------+-------------------------------------------+
|                   6 |                     3 |                                    0.5000 |
+---------------------+-----------------------+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> insert into fct_accept
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 6789, 12345);
Query OK, 1 row affected (0.04 sec)

mysql> select count(a.sender_uid) ,count(b.accepter_uid), count(b.accepter_uid)/count(a.sender_uid)
    -> from (select sender_uid, recipient_uid from fct_request) a
    -> left outer join
    -> (select accepter_uid , sender_uid from fct_accept) b
    -> on  a.recipient_uid = b.accepter_uid;
+---------------------+-----------------------+-------------------------------------------+
| count(a.sender_uid) | count(b.accepter_uid) | count(b.accepter_uid)/count(a.sender_uid) |
+---------------------+-----------------------+-------------------------------------------+
|                   7 |                     4 |                                    0.5714 |
+---------------------+-----------------------+-------------------------------------------+
1 row in set (0.00 sec)

mysql> select sender_uid, recipient_uid from fct_request;
+------------+---------------+
| sender_uid | recipient_uid |
+------------+---------------+
|      12345 |          6789 |
|      12345 |          9876 |
|      34567 |         12345 |
|       9876 |          1209 |
|      23746 |       2398473 |
|      37465 |         23094 |
+------------+---------------+
6 rows in set (0.00 sec)

mysql> select accepter_uid , sender_uid from fct_accept
    -> ;
+--------------+------------+
| accepter_uid | sender_uid |
+--------------+------------+
|         6789 |      12345 |
|         9876 |      12345 |
|        12345 |      34567 |
|         6789 |      12345 |
+--------------+------------+
4 rows in set (0.00 sec)

mysql>
mysql>
mysql>   select count(a.sender_uid) ,count(b.accepter_uid), count(b.accepter_uid)/count(a.sender_uid)
    ->   from (select distinct sender_uid, recipient_uid from fct_request) a
    ->   left outer join
    ->   (select distinct accepter_uid , sender_uid from fct_accept) b
    ->   on  a.recipient_uid = b.accepter_uid;
+---------------------+-----------------------+-------------------------------------------+
| count(a.sender_uid) | count(b.accepter_uid) | count(b.accepter_uid)/count(a.sender_uid) |
+---------------------+-----------------------+-------------------------------------------+
|                   6 |                     3 |                                    0.5000 |
+---------------------+-----------------------+-------------------------------------------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql>   select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept) a
    ->   group by friend;
ERROR 1140 (42000): In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'learning.fct_accept.sender_uid'; this is incompatible with sql_mode=only_full_group_by
mysql>
mysql>
mysql>
mysql>   select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc;
+--------+---------+
| friend | sum(cn) |
+--------+---------+
|  12345 |       4 |
|   6789 |       2 |
|   9876 |       1 |
|  34567 |       1 |
+--------+---------+
4 rows in set (0.00 sec)

mysql>
mysql>
mysql> select top 1 frined from (  select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc) c;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1 frined from (  select friend, sum(cn) from
  (select sender_uid as friend, co' at line 1
mysql>
mysql>
mysql>
mysql>
mysql> select top 1 friend from (  select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc) c;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1 friend from (  select friend, sum(cn) from
  (select sender_uid as friend, co' at line 1
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> select  friend from (  select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc) c limit 1;
+--------+
| friend |
+--------+
|  12345 |
+--------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql> CREATE TABLE IF NOT EXISTS coderpad.post_likes (ds VARCHAR(10), post_id INT, num_likes INT);
ERROR 1049 (42000): Unknown database 'coderpad'
mysql>
mysql>
mysql>
mysql>
mysql> CREATE TABLE IF NOT EXISTS post_likes (ds VARCHAR(10), post_id INT, num_likes INT);
Query OK, 0 rows affected (0.11 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-01', 101, 2);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-01', 102, 7);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-01', 103, 0);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-01', 104, 9);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 102, 11);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 103, 2);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 104, 1);
Query OK, 1 row affected (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 105, 7);
Query OK, 1 row affected (0.02 sec)

mysql>
mysql> select count(*) from post_likes;
+----------+
| count(*) |
+----------+
|        8 |
+----------+
1 row in set (0.00 sec)

mysql> select * from post_likesl
mysql> select * from post_likes;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     104 |         1 |
| 2014-01-02 |     105 |         7 |
+------------+---------+-----------+
8 rows in set (0.00 sec)

mysql> select ds from post_likes group by ds having sum(num_likes) >20 ;
+------------+
| ds         |
+------------+
| 2014-01-02 |
+------------+
1 row in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> select
    -> count(distinct post_id),
    -> count(case when num_likes >0 then 1 else 0 end)
    -> from post_likes
    -> group by ds;
+-------------------------+-------------------------------------------------+
| count(distinct post_id) | count(case when num_likes >0 then 1 else 0 end) |
+-------------------------+-------------------------------------------------+
|                       4 |                                               4 |
|                       4 |                                               4 |
+-------------------------+-------------------------------------------------+
2 rows in set (0.00 sec)

mysql> select ds,
    -> count(distinct post_id),
    -> count(case when num_likes >0 then 1 else 0 end)
    -> from post_likes
    -> group by ds
    -> ;
+------------+-------------------------+-------------------------------------------------+
| ds         | count(distinct post_id) | count(case when num_likes >0 then 1 else 0 end) |
+------------+-------------------------+-------------------------------------------------+
| 2014-01-01 |                       4 |                                               4 |
| 2014-01-02 |                       4 |                                               4 |
+------------+-------------------------+-------------------------------------------------+
2 rows in set (0.00 sec)

mysql>
mysql>
mysql> select ds,
    -> count(distinct post_id),
    -> count(case when num_likes >0 then post_id else null end)
    -> from post_likes
    -> group by ds;
+------------+-------------------------+----------------------------------------------------------+
| ds         | count(distinct post_id) | count(case when num_likes >0 then post_id else null end) |
+------------+-------------------------+----------------------------------------------------------+
| 2014-01-01 |                       4 |                                                        3 |
| 2014-01-02 |                       4 |                                                        4 |
+------------+-------------------------+----------------------------------------------------------+
2 rows in set (0.00 sec)

mysql> select ds,
    -> count(distinct post_id) as tnp,
    -> count(case when num_likes >0 then post_id else null end)  as tnpwith_1_plus likes
    -> from post_likes
    -> group by ds
    ->
    -> ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'likes
from post_likes
group by ds' at line 3
mysql>
mysql>
mysql>
mysql> select ds,
    -> count(distinct post_id) as tnp,
    -> count(case when num_likes >0 then post_id else null end)  as tnpwith_1_plus_likes
    -> from post_likes
    -> group by ds
    -> ;
+------------+-----+----------------------+
| ds         | tnp | tnpwith_1_plus_likes |
+------------+-----+----------------------+
| 2014-01-01 |   4 |                    3 |
| 2014-01-02 |   4 |                    4 |
+------------+-----+----------------------+
2 rows in set (0.01 sec)

mysql>
mysql>
mysql>
mysql> select * from post_likes ;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     104 |         1 |
| 2014-01-02 |     105 |         7 |
+------------+---------+-----------+
8 rows in set (0.00 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 104, null);
Query OK, 1 row affected (0.08 sec)

mysql>
mysql>
mysql>
mysql> SELECT a.post_id
    ->      FROM post_likes a
    ->      JOIN post_likes b
    ->      ON a.post_id = b.post_id
    ->      AND a.ds = '2014-01-01'
    ->      AND b.ds = '2014-01-02'
    ->      AND coalesce(a.num_likes , 0) = 0
    ->      AND b.num_likes > 0; ;
+---------+
| post_id |
+---------+
|     103 |
+---------+
1 row in set (0.00 sec)

ERROR:
No query specified

mysql> SELECT a.post_id
    -> FROM post_likes a
    -> JOIN post_likes b
    -> ON a.post_id = b.post_id
    -> AND a.ds = '2014-01-01'
    -> AND b.ds = '2014-01-02' AND a.num_likes = 0 AND b.num_likes > 0;
+---------+
| post_id |
+---------+
|     103 |
+---------+
1 row in set (0.00 sec)

mysql> ;
ERROR:
No query specified

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-01', 105, null);
Query OK, 1 row affected (0.04 sec)

mysql>
mysql>
mysql>
mysql>      SELECT a.post_id
    ->      FROM post_likes a
    ->      JOIN post_likes b
    ->      ON a.post_id = b.post_id
    ->      AND a.ds = '2014-01-01'
    ->      AND b.ds = '2014-01-02'
    ->      AND coalesce(a.num_likes , 0) = 0
    ->      AND b.num_likes > 0;
+---------+
| post_id |
+---------+
|     103 |
|     105 |
+---------+
2 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> SELECT    ds, IF(COUNT(*) = COUNT(DISTINCT post_id), 1, 0) AS test_result  FROM post_likes GROUP BY ds;
+------------+-------------+
| ds         | test_result |
+------------+-------------+
| 2014-01-01 |           1 |
| 2014-01-02 |           0 |
+------------+-------------+
2 rows in set (0.00 sec)

mysql> select * FROM post_likes;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     104 |         1 |
| 2014-01-02 |     105 |         7 |
| 2014-01-02 |     104 |      NULL |
| 2014-01-01 |     105 |      NULL |
+------------+---------+-----------+
10 rows in set (0.00 sec)

mysql> select * FROM post_likes order by ds ;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-01 |     105 |      NULL |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     104 |         1 |
| 2014-01-02 |     105 |         7 |
| 2014-01-02 |     104 |      NULL |
+------------+---------+-----------+
10 rows in set (0.00 sec)

mysql> delete from post_likes where post_id = 104 and ds = '2014-01-02';
Query OK, 2 rows affected (0.07 sec)

mysql> INSERT INTO post_likes (ds, post_id, num_likes) VALUES ('2014-01-02', 104, 1);
Query OK, 1 row affected (0.05 sec)

mysql> select * FROM post_likes order by ds ;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-01 |     105 |      NULL |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     105 |         7 |
| 2014-01-02 |     104 |         1 |
+------------+---------+-----------+
9 rows in set (0.00 sec)

mysql> SELECT    ds, IF(COUNT(*) = COUNT(DISTINCT post_id), 1, 0) AS test_result  FROM post_likes GROUP BY ds;
+------------+-------------+
| ds         | test_result |
+------------+-------------+
| 2014-01-01 |           1 |
| 2014-01-02 |           1 |
+------------+-------------+
2 rows in set (0.00 sec)

mysql>
mysql>
mysql> create table fct_sales (
    ->
    ->   dateid date not null,
    ->
    ->   fruit varchar(10),
    ->
    ->   sold int
    ->
    -> );
ERROR 2006 (HY000): MySQL server has gone away
No connection. Trying to reconnect...
Connection id:    10
Current database: learning

Query OK, 0 rows affected (0.05 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 'Apple', 31);
Query OK, 1 row affected (0.03 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-01', '%Y-%m-%d'), 'Orange', 19);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-02', '%Y-%m-%d'), 'Apple', 37);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-02', '%Y-%m-%d'), 'Orange', 26);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-03', '%Y-%m-%d'), 'Apple', 21);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-03', '%Y-%m-%d'), 'Orange', 21);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-04', '%Y-%m-%d'), 'Apple', 35);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> insert into fct_sales
    ->
    -> values(STR_TO_DATE('2015-01-04', '%Y-%m-%d'), 'Orange', 27);
Query OK, 1 row affected (0.10 sec)

mysql>
mysql>
mysql>
mysql> select abs(a.sold - b.sold), a.dateid, b.dateid
    -> from
    -> fct_sales a
    -> inner join o
    -> on a.dateid = b.dateid
    -> ;
ERROR 1146 (42S02): Table 'learning.o' doesn't exist
mysql> select abs(a.sold - b.sold), a.dateid, b.dateid
    -> from
    -> fct_sales a
    -> inner join fct_sales o
    -> on a.dateid = b.dateid;
ERROR 1054 (42S22): Unknown column 'b.sold' in 'field list'
mysql> select * from fct_sales;
+------------+--------+------+
| dateid     | fruit  | sold |
+------------+--------+------+
| 2015-01-01 | Apple  |   31 |
| 2015-01-01 | Orange |   19 |
| 2015-01-02 | Apple  |   37 |
| 2015-01-02 | Orange |   26 |
| 2015-01-03 | Apple  |   21 |
| 2015-01-03 | Orange |   21 |
| 2015-01-04 | Apple  |   35 |
| 2015-01-04 | Orange |   27 |
+------------+--------+------+
8 rows in set (0.00 sec)

mysql>
mysql>
mysql> select abs(a.sold - o.sold), a.dateid, o.dateid
    -> from
    -> fct_sales a
    ->   inner join fct_sales o
    -> on a.dateid = o.dateid;
+----------------------+------------+------------+
| abs(a.sold - o.sold) | dateid     | dateid     |
+----------------------+------------+------------+
|                    0 | 2015-01-01 | 2015-01-01 |
|                   12 | 2015-01-01 | 2015-01-01 |
|                   12 | 2015-01-01 | 2015-01-01 |
|                    0 | 2015-01-01 | 2015-01-01 |
|                    0 | 2015-01-02 | 2015-01-02 |
|                   11 | 2015-01-02 | 2015-01-02 |
|                   11 | 2015-01-02 | 2015-01-02 |
|                    0 | 2015-01-02 | 2015-01-02 |
|                    0 | 2015-01-03 | 2015-01-03 |
|                    0 | 2015-01-03 | 2015-01-03 |
|                    0 | 2015-01-03 | 2015-01-03 |
|                    0 | 2015-01-03 | 2015-01-03 |
|                    0 | 2015-01-04 | 2015-01-04 |
|                    8 | 2015-01-04 | 2015-01-04 |
|                    8 | 2015-01-04 | 2015-01-04 |
|                    0 | 2015-01-04 | 2015-01-04 |
+----------------------+------------+------------+
16 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> select a.fruit, o.fruit , abs(a.sold - o.sold), a.dateid, o.dateid
    -> from
    -> fct_sales a
    ->   inner join fct_sales o
    -> on a.dateid = o.dateid;
+--------+--------+----------------------+------------+------------+
| fruit  | fruit  | abs(a.sold - o.sold) | dateid     | dateid     |
+--------+--------+----------------------+------------+------------+
| Apple  | Apple  |                    0 | 2015-01-01 | 2015-01-01 |
| Orange | Apple  |                   12 | 2015-01-01 | 2015-01-01 |
| Apple  | Orange |                   12 | 2015-01-01 | 2015-01-01 |
| Orange | Orange |                    0 | 2015-01-01 | 2015-01-01 |
| Apple  | Apple  |                    0 | 2015-01-02 | 2015-01-02 |
| Orange | Apple  |                   11 | 2015-01-02 | 2015-01-02 |
| Apple  | Orange |                   11 | 2015-01-02 | 2015-01-02 |
| Orange | Orange |                    0 | 2015-01-02 | 2015-01-02 |
| Apple  | Apple  |                    0 | 2015-01-03 | 2015-01-03 |
| Orange | Apple  |                    0 | 2015-01-03 | 2015-01-03 |
| Apple  | Orange |                    0 | 2015-01-03 | 2015-01-03 |
| Orange | Orange |                    0 | 2015-01-03 | 2015-01-03 |
| Apple  | Apple  |                    0 | 2015-01-04 | 2015-01-04 |
| Orange | Apple  |                    8 | 2015-01-04 | 2015-01-04 |
| Apple  | Orange |                    8 | 2015-01-04 | 2015-01-04 |
| Orange | Orange |                    0 | 2015-01-04 | 2015-01-04 |
+--------+--------+----------------------+------------+------------+
16 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql> select a.fruit, o.fruit , abs(a.sold - o.sold), a.dateid, o.dateid
    -> from
    -> fct_sales a
    ->   inner join fct_sales o
    -> on a.dateid = o.dateid
    -> where a.fruit = 'Apple'
    -> and o.fruit = 'Orange';
+-------+--------+----------------------+------------+------------+
| fruit | fruit  | abs(a.sold - o.sold) | dateid     | dateid     |
+-------+--------+----------------------+------------+------------+
| Apple | Orange |                   12 | 2015-01-01 | 2015-01-01 |
| Apple | Orange |                   11 | 2015-01-02 | 2015-01-02 |
| Apple | Orange |                    0 | 2015-01-03 | 2015-01-03 |
| Apple | Orange |                    8 | 2015-01-04 | 2015-01-04 |
+-------+--------+----------------------+------------+------------+
4 rows in set (0.00 sec)

mysql> show tables ;
+--------------------+
| Tables_in_learning |
+--------------------+
| fct_accept         |
| fct_request        |
| fct_sales          |
| post_likes         |
| tblEmployee        |
+--------------------+
5 rows in set (0.00 sec)

mysql>  SELECT    ds, IF(COUNT(*) = COUNT(DISTINCT post_id), 1, 0) AS test_result  FROM post_likes GROUP BY ds;
+------------+-------------+
| ds         | test_result |
+------------+-------------+
| 2014-01-01 |           1 |
| 2014-01-02 |           1 |
+------------+-------------+
2 rows in set (0.00 sec)

mysql> select * from post_likesl
    -> ;
ERROR 1146 (42S02): Table 'learning.post_likesl' doesn't exist
mysql> select * from post_likes;
+------------+---------+-----------+
| ds         | post_id | num_likes |
+------------+---------+-----------+
| 2014-01-01 |     101 |         2 |
| 2014-01-01 |     102 |         7 |
| 2014-01-01 |     103 |         0 |
| 2014-01-01 |     104 |         9 |
| 2014-01-02 |     102 |        11 |
| 2014-01-02 |     103 |         2 |
| 2014-01-02 |     105 |         7 |
| 2014-01-01 |     105 |      NULL |
| 2014-01-02 |     104 |         1 |
+------------+---------+-----------+
9 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> SELECT    ds, case when count(*) = count(distinct post_id) then 1 else 0 end  FROM post_likes GROUP BY ds;
+------------+----------------------------------------------------------------+
| ds         | case when count(*) = count(distinct post_id) then 1 else 0 end |
+------------+----------------------------------------------------------------+
| 2014-01-01 |                                                              1 |
| 2014-01-02 |                                                              1 |
+------------+----------------------------------------------------------------+
2 rows in set (0.00 sec)

mysql> show tables ;
+--------------------+
| Tables_in_learning |
+--------------------+
| fct_accept         |
| fct_request        |
| fct_sales          |
| post_likes         |
| tblEmployee        |
+--------------------+
5 rows in set (0.00 sec)

mysql> select * from tblEmployee;
+------------+-------+-----------+
| EmployeeId | Name  | ManagerId |
+------------+-------+-----------+
|          1 | Tom   |         2 |
|          2 | Josh  |      NULL |
|          3 | Mike  |         2 |
|          4 | John  |         3 |
|          5 | Pam   |         1 |
|          6 | Mary  |         3 |
|          7 | James |         1 |
|          8 | Sam   |         5 |
|          9 | Simon |         1 |
+------------+-------+-----------+
9 rows in set (0.00 sec)

mysql>
mysql>
mysql>
mysql> select  friend from (
    -> select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc
    ->
    ->   ) c limit 1;
+--------+
| friend |
+--------+
|  12345 |
+--------+
1 row in set (0.00 sec)

mysql> select  friend from ( select friend, sum(cn) from   (select sender_uid as friend, count(*)  cn   from fct_accept   group by sender_uid   union all   select accepter_uid as friend, count(*) cn   from fct_accept   group by accepter_uid) a   group by friend order by sum(cn) desc    ) c ;
+--------+
| friend |
+--------+
|  12345 |
|   6789 |
|  34567 |
|   9876 |
+--------+
4 rows in set (0.00 sec)

mysql> select friend, sum(cn) from
    ->   (select sender_uid as friend, count(*)  cn
    ->   from fct_accept
    ->   group by sender_uid
    ->   union all
    ->   select accepter_uid as friend, count(*) cn
    ->   from fct_accept
    ->   group by accepter_uid) a
    ->   group by friend order by sum(cn) desc
    -> ;
+--------+---------+
| friend | sum(cn) |
+--------+---------+
|  12345 |       4 |
|   6789 |       2 |
|   9876 |       1 |
|  34567 |       1 |
+--------+---------+
4 rows in set (0.00 sec)

mysql> select * from from fct_accept;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from fct_accept' at line 1
mysql> select * from fct_accept;
+------------+--------------+------------+
| dateid     | accepter_uid | sender_uid |
+------------+--------------+------------+
| 2015-01-01 |         6789 |      12345 |
| 2015-01-02 |         9876 |      12345 |
| 2015-01-02 |        12345 |      34567 |
| 2015-01-01 |         6789 |      12345 |
+------------+--------------+------------+
4 rows in set (0.00 sec)
